{"version":3,"sources":["context/game/context/index.js","Main/Game/index.js","Main/GameDisplay/index.js","Main/styled.js","context/game/reducer/index.js","context/game/provider/index.js","Main/index.js","styles/global.js","index.js"],"names":["GameStateContext","React","createContext","GameDispatchContext","Game","dispatch","context","useContext","undefined","Error","useGameDispatch","handleClick","dispatchType","a","type","useEffect","onClick","GameDisplay","useState","reveal","setReveal","useGameState","wins","losses","cpu","Container","styled","div","gameReducer","state","action","toast","success","error","info","options","Math","floor","random","length","GameProvider","children","useReducer","Provider","value","main","createGlobalStyle","App","Main","ReactDOM","render","document","getElementById"],"mappings":"8MAEA,MAAMA,EAAmBC,IAAMC,gBACzBC,EAAsBF,IAAMC,gBCwBnBE,MAxBf,WACE,MAAMC,EDSR,WACE,MAAMC,EAAUL,IAAMM,WAAWJ,GACjC,QAAgBK,IAAZF,EACF,MAAM,IAAIG,MAAM,sDAElB,OAAOH,ECdUI,GADH,SAUCC,EAVD,8EAUd,WAA2BC,GAA3B,SAAAC,EAAA,sEACQR,EAAS,CAACS,KAAMF,IADxB,uBAEQP,EAAS,CAACS,KAAM,aAFxB,4CAVc,sBAed,OATAC,oBAAU,KAHRV,EAAS,CAACS,KAAM,iBAahB,oCACE,4BAAQE,QAAS,IAAML,EAAY,SAAnC,QACA,4BAAQK,QAAS,IAAML,EAAY,YAAnC,WACA,4BAAQK,QAAS,IAAML,EAAY,UAAnC,W,OCnBS,SAASM,IAAe,MAAD,EACRC,oBAAS,GADD,mBAC7BC,EAD6B,KACrBC,EADqB,OFEtC,WACE,MAAMd,EAAUL,IAAMM,WAAWP,GACjC,QAAgBQ,IAAZF,EACF,MAAM,IAAIG,MAAM,mDAElB,OAAOH,EELqBe,GAArBC,EAF6B,EAE7BA,KAAMC,EAFuB,EAEvBA,OAAQC,EAFe,EAEfA,IAErB,OACE,6BACE,6BACGL,EAAM,6BACmBK,GACtB,iCAEHL,EACC,uBACEH,QAAS,KACPI,GAAU,KAFd,sBAQA,uBACEJ,QAAS,KACPI,GAAU,KAFd,yBASJ,oDAAsBE,EAAtB,oBAAsCC,K,oBC9BrC,MAAME,EAAYC,IAAOC,IAAV,6X,WCAP,SAASC,EAAYC,EAAOC,GACzC,OAAQA,EAAOhB,MACb,IAAK,OACH,OAAQe,EAAML,KACZ,IAAK,UAEH,OADAO,IAAMC,QAAQ,kBACP,CACLR,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KAAO,EACnBC,OAAQM,EAAMN,QAGlB,IAAK,QAEH,OADAQ,IAAME,MAAM,mBACL,CACLT,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,OAAS,GAG3B,QAEE,OADAQ,IAAMG,KAAK,iBACJ,CACLV,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,QAKtB,IAAK,UACH,OAAQM,EAAML,KACZ,IAAK,QAEH,OADAO,IAAMC,QAAQ,kBACP,CACLR,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KAAO,EACnBC,OAAQM,EAAMN,QAGlB,IAAK,OAEH,OADAQ,IAAME,MAAM,mBACL,CACLT,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,OAAS,GAG3B,QAEE,OADAQ,IAAMG,KAAK,iBACJ,CACLV,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,QAKtB,IAAK,QACH,OAAQM,EAAML,KACZ,IAAK,OAEH,OADAO,IAAMC,QAAQ,kBACP,CACLR,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KAAO,EACnBC,OAAQM,EAAMN,QAGlB,IAAK,UAEH,OADAQ,IAAME,MAAM,mBACL,CACLT,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,OAAS,GAG3B,QAEE,OADAQ,IAAMG,KAAK,iBACJ,CACLV,IAAKK,EAAML,IACXF,KAAMO,EAAMP,KACZC,OAAQM,EAAMN,QAKtB,IAAK,aAAc,CACjB,MAAMY,EAAU,CAAC,OAAQ,UAAW,SAEpC,MAAO,CAACX,IAAKW,EADIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQI,SACpBjB,KAAM,EAAGC,OAAQ,GAEnD,IAAK,WAAY,CACf,MAAMY,EAAU,CAAC,OAAQ,UAAW,SAEpC,MAAO,CAACX,IAAKW,EADIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAQI,SACpBjB,KAAMO,EAAMP,KAAMC,OAAQM,EAAMN,QAGlE,QACE,MAAM,IAAId,MAAJ,iCAAoCqB,EAAOhB,QCjGhD,SAAS0B,GAAa,SAACC,IAAY,MAAD,EACbxC,IAAMyC,WAAWd,EAAa,CACtDJ,IAAK,GACLF,KAAM,EACNC,OAAQ,IAJ6B,mBAChCM,EADgC,KACzBxB,EADyB,KAMvC,OACE,kBAACL,EAAiB2C,SAAlB,CAA2BC,MAAOf,GAChC,kBAAC1B,EAAoBwC,SAArB,CAA8BC,MAAOvC,GAClCoC,ICMMI,I,EAAAA,EAbf,WACE,OACE,kBAACL,EAAD,KACE,kBAACf,EAAD,KACE,4BACE,kBAACR,EAAD,MACA,kBAAC,EAAD,UCTK6B,G,MAAAA,YAAf,mhBCGA,SAASC,IACP,OACE,oCACE,kBAACC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,OAKNC,IAASC,OAAO,kBAACH,EAAD,MAASI,SAASC,eAAe,W","file":"static/js/main.5263a68a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst GameStateContext = React.createContext()\r\nconst GameDispatchContext = React.createContext()\r\n\r\nfunction useGameState() {\r\n  const context = React.useContext(GameStateContext)\r\n  if (context === undefined) {\r\n    throw new Error('useGameState must be used within a GameProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nfunction useGameDispatch() {\r\n  const context = React.useContext(GameDispatchContext)\r\n  if (context === undefined) {\r\n    throw new Error('useGameDispatch must be used within a GameProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport {useGameState, useGameDispatch, GameStateContext, GameDispatchContext}\r\n","import {useGameDispatch} from '../../context/game/context'\r\nimport React, {useEffect} from 'react'\r\nimport {toast} from 'react-toastify'\r\nfunction Game() {\r\n  const dispatch = useGameDispatch()\r\n  const startGame = () => {\r\n    dispatch({type: 'initialize'})\r\n  }\r\n\r\n  useEffect(() => {\r\n    startGame()\r\n  })\r\n\r\n  async function handleClick(dispatchType) {\r\n    await dispatch({type: dispatchType})\r\n    await dispatch({type: 'newMatch'})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => handleClick('rock')}>Rock</button>\r\n      <button onClick={() => handleClick('scissor')}>Scissor</button>\r\n      <button onClick={() => handleClick('paper')}>Paper</button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Game\r\n","import React, {useState} from 'react'\r\nimport {useGameState} from '../../context/game/context'\r\n\r\nexport default function GameDisplay() {\r\n  const [reveal, setReveal] = useState(false)\r\n  const {wins, losses, cpu} = useGameState()\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {reveal\r\n          ? `The CPU has chosen ${cpu}`\r\n          : 'Do you wanna see the cpu hand?'}\r\n\r\n        {reveal ? (\r\n          <p\r\n            onClick={() => {\r\n              setReveal(false)\r\n            }}\r\n          >\r\n            Click here to hide\r\n          </p>\r\n        ) : (\r\n          <p\r\n            onClick={() => {\r\n              setReveal(true)\r\n            }}\r\n          >\r\n            Click here to reveal\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div>{`Score: wins: ${wins} losses: ${losses}`}</div>\r\n    </div>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  button {\r\n    background-color: #c4320d;\r\n    border: none;\r\n    color: white;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import {toast} from 'react-toastify'\r\n\r\nexport default function gameReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'rock': {\r\n      switch (state.cpu) {\r\n        case 'scissor': {\r\n          toast.success('wow, you rock!')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins + 1,\r\n            losses: state.losses,\r\n          }\r\n        }\r\n        case 'paper': {\r\n          toast.error('cpu rocked you!')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins,\r\n            losses: state.losses + 1,\r\n          }\r\n        }\r\n        default: {\r\n          toast.info('Fair match...')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins,\r\n            losses: state.losses,\r\n          }\r\n        }\r\n      }\r\n    }\r\n    case 'scissor': {\r\n      switch (state.cpu) {\r\n        case 'paper': {\r\n          toast.success('wow, you rock!')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins + 1,\r\n            losses: state.losses,\r\n          }\r\n        }\r\n        case 'rock': {\r\n          toast.error('cpu rocked you!')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins,\r\n            losses: state.losses + 1,\r\n          }\r\n        }\r\n        default: {\r\n          toast.info('Fair match...')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins,\r\n            losses: state.losses,\r\n          }\r\n        }\r\n      }\r\n    }\r\n    case 'paper': {\r\n      switch (state.cpu) {\r\n        case 'rock': {\r\n          toast.success('wow, you rock!')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins + 1,\r\n            losses: state.losses,\r\n          }\r\n        }\r\n        case 'scissor': {\r\n          toast.error('cpu rocked you!')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins,\r\n            losses: state.losses + 1,\r\n          }\r\n        }\r\n        default: {\r\n          toast.info('Fair match...')\r\n          return {\r\n            cpu: state.cpu,\r\n            wins: state.wins,\r\n            losses: state.losses,\r\n          }\r\n        }\r\n      }\r\n    }\r\n    case 'initialize': {\r\n      const options = ['rock', 'scissor', 'paper']\r\n      const selected = Math.floor(Math.random() * options.length)\r\n      return {cpu: options[selected], wins: 0, losses: 0}\r\n    }\r\n    case 'newMatch': {\r\n      const options = ['rock', 'scissor', 'paper']\r\n      const selected = Math.floor(Math.random() * options.length)\r\n      return {cpu: options[selected], wins: state.wins, losses: state.losses}\r\n    }\r\n\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`)\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport gameReducer from '../reducer'\r\nimport {GameStateContext, GameDispatchContext} from '../context'\r\nexport function GameProvider({children}) {\r\n  const [state, dispatch] = React.useReducer(gameReducer, {\r\n    cpu: '',\r\n    wins: 0,\r\n    losses: 0,\r\n  })\r\n  return (\r\n    <GameStateContext.Provider value={state}>\r\n      <GameDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </GameDispatchContext.Provider>\r\n    </GameStateContext.Provider>\r\n  )\r\n}\r\n","import Game from './Game'\r\nimport GameDisplay from './GameDisplay'\r\nimport React from 'react'\r\nimport {Container} from './styled'\r\nimport {GameProvider} from '../context/game/provider'\r\nfunction main() {\r\n  return (\r\n    <GameProvider>\r\n      <Container>\r\n        <h1>\r\n          <GameDisplay />\r\n          <Game />\r\n        </h1>\r\n      </Container>\r\n    </GameProvider>\r\n  )\r\n}\r\n\r\nexport default main\r\n","import {createGlobalStyle} from 'styled-components'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nexport default createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap');\r\n  \r\n  body {\r\n    overflow: hidden;\r\n    background: rgb(165,1,1);\r\n    background: linear-gradient(90deg, rgba(165,1,1,1) 0%, rgba(193,4,4,1) 8%, rgba(116,1,1,1) 81%);\r\n  }\r\n\r\n  h1,h2,div {\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  h1 {\r\n    color: #ffebe6;\r\n  }\r\n\r\n  .card{\r\n    background: #fff;\r\n    box-shadow: 0 0 10px 0 rgba(183, 192, 206, 0.2);\r\n    padding: 24px;\r\n    margin-bottom: 24px;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Main from './Main'\r\nimport GlobalStyle from './styles/global'\r\nimport {ToastContainer} from 'react-toastify'\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Main />\r\n      <GlobalStyle />\r\n      <ToastContainer />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}